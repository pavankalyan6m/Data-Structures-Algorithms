
//User function Template for Java
class Solution {
    void rearrange(int arr[], int n) {
        ArrayList<Integer> list1 = new ArrayList<>();
        ArrayList<Integer> list2 = new ArrayList<>();
        
        
        // Loop through the array to divide the elements into the lists
        for (int i = 0; i < n; i++) {
            if (arr[i] >= 0) {
                list1.add(arr[i]);// Add positive elements to list1
            } else {
                list2.add(arr[i]);// Add negative elements to list2
            }
        }
        
        int p = 0, m = 0;// Variables to keep track of the current positions in list1 and list2
        
        // Handle empty lists separately
        if (list1.isEmpty() || list2.isEmpty()) {
            return; // If either list1 or list2 is empty, return as there is no need for rearrangement
        }
       
       
       //finding minsize,maxsize 
        int minSize = Math.min(list1.size(), list2.size());
        int maxSize = Math.max(list1.size(), list2.size());
       
        
        
        // Rearrange elements from both lists alternatively
        for (int i = 0; i < minSize*2; i++) {
            if (i % 2 == 0) {
                arr[i] = list1.get(p); // Place positive element from list1 at even indices
                p++;// Move to the next positive element in list1
            } else {
                arr[i] = list2.get(m);// Place negative element from list2 at odd indices
                m++;// Move to the next negative element in list2
            }
        }
        
       //Handling remaining elements
       // If list1 has more elements than list2

        if (maxSize == list1.size()) {
            for (int i = minSize*2; i < n; i++) {
                arr[i] = list1.get(p);// Fill the remaining indices with positive elements from list1
                p++;// Move to the next positive element in list1
            }
        } else {
            for (int i = minSize*2; i < n; i++) {
                arr[i] = list2.get(m);// Fill the remaining indices with negative elements from list2
                m++;// Move to the next negative element in list2
            }
            
        }
    }
}