
class Solution {
    // Function to find maximum product subarray
    long maxProduct(int[] arr, int n) {
        // code here
       
        if (n == 0) {
            return 0;
        }
        
        long maxProduct = arr[0];
        long minProduct = arr[0];
        long result = arr[0];

        for (int i = 1; i < n; i++) {
            
            if (arr[i] < 0) {
                // Swap maxProduct and minProduct since multiplying a negative number with
                // the minimum product can give the maximum product.
                
                //like if arr[i] = -10 & max till -10 is 10000
                //max = -10
                //min = 10000*-10 = -100000 (So, -10 will be greater then -100000 after swapping)
                long temp = maxProduct;
                maxProduct = minProduct;
                minProduct = temp;
            }
            
             // Calculate the temporary maximum and minimum products considering the current element.
            maxProduct = Math.max(arr[i], maxProduct * arr[i]);
            minProduct = Math.min(arr[i], minProduct * arr[i]);
            
            System.out.println("MaxProduct: "+maxProduct);
            System.out.println("MinProduct: "+minProduct);

            
            // Update the overall result.
            result = Math.max(result, maxProduct);
        }
        return result;
    }
}